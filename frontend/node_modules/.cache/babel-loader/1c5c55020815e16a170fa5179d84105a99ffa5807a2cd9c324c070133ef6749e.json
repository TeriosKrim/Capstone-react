{"ast":null,"code":"var _jsxFileName = \"/Users/terioskrim/Documents/GitHub/Capstone-react/src/Tier/DropTarget.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// Hook to make a component a drop target\nimport { useDrop } from \"react-dnd\";\n// Import the DraggableItem component\nimport DraggableItem from \"./DraggableItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  ITEM: \"item\" // Define the type of items this drop target accepts\n};\nconst DropTarget = ({\n  items,\n  onDrop\n}) => {\n  _s();\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    // Accept only items of the specified type\n    drop: item => onDrop(item.id),\n    // Handle the drop event\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      // Monitor if an item is currently over the target\n      canDrop: monitor.canDrop() // Monitor if the target can accept the item\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop // Attach the drop behavior to this element\n    ,\n    style: {\n      minHeight: \"50px\",\n      // Minimum height for the drop area\n      width: \"100%\",\n      // Full width of the parent container\n      padding: \"10px\",\n      // Padding inside the drop area\n      border: \"2px border #ccc\",\n      // Dashed border to indicate a drop area\n      backgroundColor: isOver ? \"white\" : \"transparent\",\n      transition: \"background-color 0.3s ease\"\n    },\n    children: [items.map(item => /*#__PURE__*/_jsxDEV(DraggableItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), !items.length && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(DropTarget, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n_c = DropTarget;\nexport default DropTarget;\nvar _c;\n$RefreshReg$(_c, \"DropTarget\");","map":{"version":3,"names":["React","useDrop","DraggableItem","jsxDEV","_jsxDEV","ItemTypes","ITEM","DropTarget","items","onDrop","_s","canDrop","isOver","drop","accept","item","id","collect","monitor","ref","style","minHeight","width","padding","border","backgroundColor","transition","children","map","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/terioskrim/Documents/GitHub/Capstone-react/src/Tier/DropTarget.js"],"sourcesContent":["import React from \"react\";\n// Hook to make a component a drop target\nimport { useDrop } from \"react-dnd\";\n// Import the DraggableItem component\nimport DraggableItem from \"./DraggableItem\";\n\nconst ItemTypes = {\n    ITEM: \"item\", // Define the type of items this drop target accepts\n};\n\nconst DropTarget = ({ items, onDrop }) => {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: ItemTypes.ITEM, // Accept only items of the specified type\n        drop: (item) => onDrop(item.id), // Handle the drop event\n        collect: (monitor) => ({\n            isOver: monitor.isOver(), // Monitor if an item is currently over the target\n            canDrop: monitor.canDrop(), // Monitor if the target can accept the item\n        }),\n    });\n\n    return (\n        <div\n            ref={drop} // Attach the drop behavior to this element\n            style={{\n                minHeight: \"50px\", // Minimum height for the drop area\n                width: \"100%\", // Full width of the parent container\n                padding: \"10px\", // Padding inside the drop area\n                border: \"2px border #ccc\", // Dashed border to indicate a drop area\n                backgroundColor: isOver ? \"white\" : \"transparent\",\n                transition: \"background-color 0.3s ease\",\n            }}\n        >\n            {items.map((item) => (\n                <DraggableItem key={item.id} item={item} />\n            ))}\n            {!items.length && <p></p>}\n        </div>\n    );\n};\n\nexport default DropTarget;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,OAAO,QAAQ,WAAW;AACnC;AACA,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAG;EACdC,IAAI,EAAE,MAAM,CAAE;AAClB,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAAC;IAAEC,OAAO;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGZ,OAAO,CAAC;IACxCa,MAAM,EAAET,SAAS,CAACC,IAAI;IAAE;IACxBO,IAAI,EAAGE,IAAI,IAAKN,MAAM,CAACM,IAAI,CAACC,EAAE,CAAC;IAAE;IACjCC,OAAO,EAAGC,OAAO,KAAM;MACnBN,MAAM,EAAEM,OAAO,CAACN,MAAM,CAAC,CAAC;MAAE;MAC1BD,OAAO,EAAEO,OAAO,CAACP,OAAO,CAAC,CAAC,CAAE;IAChC,CAAC;EACL,CAAC,CAAC;EAEF,oBACIP,OAAA;IACIe,GAAG,EAAEN,IAAK,CAAC;IAAA;IACXO,KAAK,EAAE;MACHC,SAAS,EAAE,MAAM;MAAE;MACnBC,KAAK,EAAE,MAAM;MAAE;MACfC,OAAO,EAAE,MAAM;MAAE;MACjBC,MAAM,EAAE,iBAAiB;MAAE;MAC3BC,eAAe,EAAEb,MAAM,GAAG,OAAO,GAAG,aAAa;MACjDc,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,GAEDnB,KAAK,CAACoB,GAAG,CAAEb,IAAI,iBACZX,OAAA,CAACF,aAAa;MAAea,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC7C,CAAC,EACD,CAACxB,KAAK,CAACyB,MAAM,iBAAI7B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAACtB,EAAA,CA5BIH,UAAU;EAAA,QACwBN,OAAO;AAAA;AAAAiC,EAAA,GADzC3B,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
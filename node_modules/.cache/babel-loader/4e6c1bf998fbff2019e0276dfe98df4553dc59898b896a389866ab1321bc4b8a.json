{"ast":null,"code":"var _jsxFileName = \"/Users/terioskrim/Documents/GitHub/Capstone-react/src/Tier.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tier = () => {\n  _s();\n  const [tier, setTier] = useState([\"S\", \"A\", \"B\", \"C\", \"D\", \"F\"]);\n  const [charactersData, setCharactersData] = useState([{\n    name: \"Kenshi\",\n    image: \"/img/Characters/icon/Kenshi.png\",\n    versions: [\"PS2/Xbox\", \"Gamecube\", \"PSP\", \"Ultimate\"]\n  }, {\n    name: \"Jade\",\n    image: \"/img/Characters/icon/Jade.png\",\n    versions: [\"PS2/Xbox\", \"Gamecube\", \"PSP\", \"Ultimate\"]\n  }]);\n  const [selectedVersion, setSelectedVersion] = useState(\"null\");\n  const [tierList, setTierList] = useState({});\n  const [characterPool, setCharacterPool] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedVersion,\n      onChange: handleVersionChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"null\",\n        children: \"Select Your Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"PS2/Xbox\",\n        children: \"PS2/Xbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Gamecube\",\n        children: \"Gamecube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"PSP\",\n        children: \"PSP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Ultimate\",\n        children: \"Ultimate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tierList\",\n      children: tiers.map(tier => {\n        var _tierList$tier;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier-row\",\n          \"data-tier\": tier,\n          onDragOver: e => e.preventDefault(),\n          onDrop: e => handleDrop(e, tier),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"tier-label\",\n            defaultValue: tier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"characters-container\",\n            children: (_tierList$tier = tierList[tier]) === null || _tierList$tier === void 0 ? void 0 : _tierList$tier.map(char => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: char.image,\n              alt: char.name,\n              className: \"character\",\n              draggable: true\n              // onDragStart={(e) =>\n              //     handleDragStart(e, char)\n              // }\n            }, char.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, tier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"characterPool\",\n      onDragOver: e => e.preventDefault()\n      // onDrop={handlePoolDrop}\n      ,\n      children: characterPool.map(char => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: char.image,\n        alt: char.name,\n        className: \"character\",\n        draggable: true\n        // onDragStart={(e) => handleDragStart(e, char)}\n      }, char.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Tier, \"s+8yk/lzbZHTEjZl2gPwy/EMTc4=\");\n_c = Tier;\nexport default Tier;\nvar _c;\n$RefreshReg$(_c, \"Tier\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Tier","_s","tier","setTier","charactersData","setCharactersData","name","image","versions","selectedVersion","setSelectedVersion","tierList","setTierList","characterPool","setCharacterPool","children","value","onChange","handleVersionChange","fileName","_jsxFileName","lineNumber","columnNumber","id","tiers","map","_tierList$tier","className","onDragOver","e","preventDefault","onDrop","handleDrop","type","defaultValue","char","src","alt","draggable","_c","$RefreshReg$"],"sources":["/Users/terioskrim/Documents/GitHub/Capstone-react/src/Tier.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst Tier = () => {\n    const [tier, setTier] = useState([\"S\", \"A\", \"B\", \"C\", \"D\", \"F\"]);\n    const [charactersData, setCharactersData] = useState([\n        {\n            name: \"Kenshi\",\n            image: \"/img/Characters/icon/Kenshi.png\",\n            versions: [\"PS2/Xbox\", \"Gamecube\", \"PSP\", \"Ultimate\"],\n        },\n        {\n            name: \"Jade\",\n            image: \"/img/Characters/icon/Jade.png\",\n            versions: [\"PS2/Xbox\", \"Gamecube\", \"PSP\", \"Ultimate\"],\n        },\n    ]);\n    const [selectedVersion, setSelectedVersion] = useState(\"null\");\n    const [tierList, setTierList] = useState({});\n    const [characterPool, setCharacterPool] = useState([]);\n\n    return (\n        <div>\n            <select value={selectedVersion} onChange={handleVersionChange}>\n                <option value=\"null\">Select Your Version</option>\n                <option value=\"PS2/Xbox\">PS2/Xbox</option>\n                <option value=\"Gamecube\">Gamecube</option>\n                <option value=\"PSP\">PSP</option>\n                <option value=\"Ultimate\">Ultimate</option>\n            </select>\n\n            <div id=\"tierList\">\n                {tiers.map((tier) => (\n                    <div\n                        key={tier}\n                        className=\"tier-row\"\n                        data-tier={tier}\n                        onDragOver={(e) => e.preventDefault()}\n                        onDrop={(e) => handleDrop(e, tier)}\n                    >\n                        <input\n                            type=\"text\"\n                            className=\"tier-label\"\n                            defaultValue={tier}\n                        />\n                        <div className=\"characters-container\">\n                            {tierList[tier]?.map((char) => (\n                                <img\n                                    key={char.name}\n                                    src={char.image}\n                                    alt={char.name}\n                                    className=\"character\"\n                                    draggable\n                                    // onDragStart={(e) =>\n                                    //     handleDragStart(e, char)\n                                    // }\n                                />\n                            ))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <div\n                id=\"characterPool\"\n                onDragOver={(e) => e.preventDefault()}\n                // onDrop={handlePoolDrop}\n            >\n                {characterPool.map((char) => (\n                    <img\n                        key={char.name}\n                        src={char.image}\n                        alt={char.name}\n                        className=\"character\"\n                        draggable\n                        // onDragStart={(e) => handleDragStart(e, char)}\n                    />\n                ))}\n            </div>\n\n            {/* <button onClick={resetTierList}>Reset Tier List</button> */}\n        </div>\n    );\n};\n\nexport default Tier;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}